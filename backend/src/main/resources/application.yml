spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: backend
  profiles:
    active: dev
  output:
    ansi:
      enabled: always
  config:
    import: optional:file:.env[.properties]
  datasource:
    url: jdbc:h2:./db_dev;MODE=MySQL
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create
      dialect: org.hibernate.dialect.H2Dialect # 데이터베이스 엔진 종류 설정
    properties:
      hibernate:
        default_batch_fetch_size: 100
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - profile
              - email
              - https://www.googleapis.com/auth/user.phonenumbers.read
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - name
              - email
              - profile_image
            client-name: Naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-info-authentication-method: header
            user-name-attribute: response
  data:
    redis:
      port: 6379
      host: localhost
logging:
  level:
    org.hibernate.SQL: TRACE
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.orm.jdbc.extract: TRACE
    org.springframework.transaction.interceptor: TRACE
custom:
  jwt:
    accessToken:
      secretKey: ${JWT_ACCESS_TOKEN_SECRET_KEY}
      expirationSeconds: "#{20 * 60}" # 20 minutes
    refreshToken:
      secretKey: ${JWT_REFRESH_TOKEN_SECRET_KEY}
      expirationSeconds: "#{30 * 24 * 60 * 60}" # 30 days
springdoc:
  default-produces-media-type: application/json;charset=UTF-8

